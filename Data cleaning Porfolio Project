 -- Data Cleaning
 
 
 select *
 from layoffs;
 
 -- 1. Remove Duplicates
 -- 2. Standardize the data 
 -- 3. Null values or blank values 
 -- 4. Remove Amy Columns
 
 -- create new table from the main table so you can edit it 
 
 create table layoffs_staging
 like layoffs;  
 
 select *
 from layoffs_staging;
 
 -- insert all the data from main table to new table 
 
 insert layoffs_staging
 select *
 from layoffs;
 
 -- Remove duplicates by adding another row called  row number 
 
 select *,
 row_number() over (
 partition by company, location,
 industry, total_laid_off, percentage_laid_off,`date`,stage, country, funds_raised_millions) as row_num
 from layoffs_staging;
 
 -- put the code above on a temporary table called cte
 with duplicate_cte as 
 (
  select *,
 row_number() over (
 partition by company, location,
 industry, total_laid_off, percentage_laid_off,`date`,stage, country, funds_raised_millions) as row_num
 from layoffs_staging
 )
 select * 
 from duplicate_cte 
 where row_num > 1;
 
 -- inother to delete duplicate . create another table from second tabel and delete
 
 
CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` int
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

 select *
 from layoffs_staging2;
 
 -- insert all th data  from layoffs_staging to layoff_staging2
 
 insert into layoffs_staging2
  select *,
 row_number() over (
 partition by company, location,
 industry, total_laid_off, percentage_laid_off,`date`,stage, country, funds_raised_millions) as row_num
 from layoffs_staging;
 
 -- Now, delete from the table
 delete 
 from layoffs_staging2 
 where row_num > 1;
  
  select *
  from layoffs_staging2;
 
 
 -- standardizing data

 
 select company, trim(company)
 from layoffs_staging2;
 
 update layoffs_staging2
 set company = trim(company);
 

 select distinct industry
 from layoffs_staging2
 order by 1;
 
 select *
 from layoffs_staging2
 where industry like 'crypto%';
 
 update layoffs_staging2
 set industry = 'crypto'
 where industry like 'crypto%';
 
 
select distinct country
from layoffs_staging2
order by 1;

select distinct country
from layoffs_staging2
where country like'united states%'
order by 1;

update layoffs_staging2
set country = 'united states'
where country like 'united states%';

select `date` , 
str_to_date(`date`, '%m/%d/%Y' )  
from layoffs_staging2;

update layoffs_staging2 
set `date` = str_to_date(`date`, '%m/%d/%Y' );


-- chnage the date data type from text to date

alter table layoffs_staging2
modify column `date` date;

-- remove the null and empty columns
 
select *
from layoffs_staging2
where  total_laid_off is null 
and  percentage_laid_off is null
;

select * 
from layoffs_staging2
where industry is null
or industry = '';

-- replace blank space with null

update layoffs_staging2
set  industry = null
where industry = '';

select t1.industry, t2.industry
from layoffs_staging2 t1
join layoffs_staging2 t2
	on t1.company = t2.company
where (t1.industry is null or t1.industry = '')
and t2.industry is not null;

-- update blank spaces with appropriate industry name

update layoffs_staging2 t1
join layoffs_staging2 t2
    on t1.company = t2.company
set t1.industry = t2.industry
where  t1.industry is null and t2.industry is not null;

select *
from layoffs_staging2
where COMPANY = 'Airbnb' ;

delete
from layoffs_staging2 
where total_laid_off is null
and percentage_laid_off is null;

alter table layoffs_staging2
drop column row_num;












